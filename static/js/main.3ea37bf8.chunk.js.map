{"version":3,"sources":["components/ContactList/renderContactList.js","components/Filter/filter.js","components/ContactForm/contactForm.js","App.js","index.js"],"names":["RenderContactList","contacts","filter","deleteContact","searchFilter","name","lowerValue","toLowerCase","includes","length","map","id","number","className","type","onClick","Filter","filterInput","value","pattern","onChange","ContactForm","onSubmit","useState","state","setState","newContact","newObj","shortid","generate","formInput","target","reset","e","preventDefault","find","alert","placeholder","title","required","App","key","defaultContacts","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","dataObj","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ea37bf8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction RenderContactList({ contacts, filter, deleteContact }) {\r\n  const searchFilter = contacts.filter(({ name }) => {\r\n    const lowerValue = filter.toLowerCase();\r\n    return name.toLowerCase().includes(lowerValue);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.length === 0 ? (\r\n          <h2>No contacts</h2>\r\n        ) : (\r\n          searchFilter.map(({ id, name, number }) => {\r\n            return (\r\n              <li key={id}>\r\n                {name}: {number}\r\n                <button\r\n                  className=\"item-list\"\r\n                  id={id}\r\n                  type=\"button\"\r\n                  onClick={() => deleteContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderContactList;\r\n\r\nRenderContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Filter({ filterInput, filter }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={filterInput}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filterInput: PropTypes.func,\r\n  Filter: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nfunction ContactForm({ contacts, onSubmit }) {\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n\r\n  const checkContact = () => {\r\n    contacts.find(({ name }) => {\r\n      return name === state.name;\r\n    })\r\n      ? alert(`${state.name} is already in contacts.`)\r\n      : newContact();\r\n  };\r\n\r\n  const newContact = () => {\r\n    const { name, number } = state;\r\n    const newObj = { name, number, id: shortid.generate() };\r\n\r\n    onSubmit(newObj);\r\n  };\r\n\r\n  const formInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState({ ...state, [name]: value });\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    checkContact();\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({ name: '', number: '' });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          placeholder=\"Kris Evans\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={formInput}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={state.number}\r\n          placeholder=\"555-55-55\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={formInput}\r\n        />\r\n      </label>\r\n      <button className=\"submit_form\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport RenderContactList from './components/ContactList/renderContactList';\r\nimport Filter from './components/Filter/filter';\r\nimport ContactForm from './components/ContactForm/contactForm';\r\n\r\nconst useLocalStorage = key => {\r\n  const defaultContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ];\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultContacts;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts');\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const filterInput = ({ target }) => {\r\n    const { value } = target;\r\n    setFilter(value);\r\n  };\r\n\r\n  const onSubmit = dataObj => {\r\n    setContacts([dataObj, ...contacts]);\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    setContacts(contacts.filter(i => i.id !== id));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={onSubmit} contacts={contacts} />\r\n      <h2>Contacts</h2>\r\n      <Filter filterInput={filterInput} filter={filter} />\r\n      <RenderContactList\r\n        contacts={contacts}\r\n        filter={filter}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}